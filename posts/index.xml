<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on f110&#39;s weblog</title>
    <link>https://f110.jp/posts/</link>
    <description>Recent content in Posts on f110&#39;s weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2020 Fumihiro Ito</copyright>
    <lastBuildDate>Thu, 02 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://f110.jp/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Homecluster basic</title>
      <link>https://f110.jp/posts/homecluster/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/homecluster/</guid>
      <description>自宅の Kubernetes クラスタをどうやって構成するかという話。 自宅クラスタ関連は タグ で一覧できるようにしています。 1&amp;nbsp;&amp;nbsp;&amp;nbsp;m</description>
    </item>
    
    <item>
      <title>Dockerを避ける</title>
      <link>https://f110.jp/posts/avoid-docker/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/avoid-docker/</guid>
      <description>皆さんはdockerを使っていますか？使っていますよね？ でもその使い方、本当にdockerじゃないとダメですか？ 自分のdockerの使い方 ほ</description>
    </item>
    
    <item>
      <title>依存ライブラリは常にvendoringする</title>
      <link>https://f110.jp/posts/vendoring-dependent-libraries/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/vendoring-dependent-libraries/</guid>
      <description>BazelでGoの依存ライブラリを管理する方法は2つあります。 go.mod からWORKSPACEファイルを生成する vendorディレクトリを使う 以前は</description>
    </item>
    
    <item>
      <title>Bazelとgrpc-goを仲良くさせる</title>
      <link>https://f110.jp/posts/bazel-with-grpc-go/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/bazel-with-grpc-go/</guid>
      <description>Bazel をGoのプロジェクトで使っている際に多くの人が悩むのがProtocol Buffersの扱い。 gRPCを使っているリポジトリでBazelとg</description>
    </item>
    
    <item>
      <title>Bazelでインテグレーションテストをする</title>
      <link>https://f110.jp/posts/integration-test-with-bazel/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/integration-test-with-bazel/</guid>
      <description>GoのプロジェクトをビルドするツールとしてGNU MakeではなくBazelを利用し、インテグレーションテストを実現する方法について紹介します</description>
    </item>
    
    <item>
      <title>GoでWebサーバを作る際のTips</title>
      <link>https://f110.jp/posts/tips-to-building-web-server-with-go/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/tips-to-building-web-server-with-go/</guid>
      <description>本エントリは オリジナル の一部を再編集して掲載しています。(2020/03/31) 内部ツール向けプロキシサーバを自作 しているためいわゆるリバー</description>
    </item>
    
    <item>
      <title>GoとBazel</title>
      <link>https://f110.jp/posts/go-and-bazel/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/go-and-bazel/</guid>
      <description>本エントリは オリジナル のコピーです。 以前、 モノレポ構成にしてビルドツールとしてBazelを利用している ことを紹介しました。 そのBazelは1</description>
    </item>
    
    <item>
      <title>Bazelの使い方詰め合わせ</title>
      <link>https://f110.jp/posts/tips-on-bazel/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/tips-on-bazel/</guid>
      <description>本エントリは オリジナル の一部を再編集して掲載しています。 (2020/03/31) 前の記事 ではBazelについて簡単に紹介しました。 ここでは更に1歩、Bazelの使</description>
    </item>
    
    <item>
      <title>Bazelとモノレポ</title>
      <link>https://f110.jp/posts/monorepo-with-bazel/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/monorepo-with-bazel/</guid>
      <description>本エントリは オリジナル の一部を再編集して掲載しています。（2020/03/31） 1&amp;nbsp;&amp;nbsp;&amp;nbsp;モノレポのメリット 2&amp;</description>
    </item>
    
  </channel>
</rss>