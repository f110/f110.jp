<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on f110&#39;s weblog</title>
    <link>https://f110.jp/posts/</link>
    <description>Recent content in Posts on f110&#39;s weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; 2020 Fumihiro Ito</copyright>
    <lastBuildDate>Sun, 23 Aug 2020 00:55:44 +0900</lastBuildDate>
    
	<atom:link href="https://f110.jp/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi 4 for k8s&#39;s control plane</title>
      <link>https://f110.jp/posts/raspberry-pi-4-for-k8s-master/</link>
      <pubDate>Sun, 23 Aug 2020 00:55:44 +0900</pubDate>
      
      <guid>https://f110.jp/posts/raspberry-pi-4-for-k8s-master/</guid>
      <description>Homecluster は Intel NUC を3台で構成していて、ここにコントロールプレーンも同居していました。 しかしこの構成はNUCがそこまで安価ではない故にコントロールプレ</description>
    </item>
    
    <item>
      <title>Loadbalancer for kube-apiserver</title>
      <link>https://f110.jp/posts/loadbalancer-for-kube-apiserver/</link>
      <pubDate>Tue, 18 Aug 2020 00:33:16 +0900</pubDate>
      
      <guid>https://f110.jp/posts/loadbalancer-for-kube-apiserver/</guid>
      <description>元々masterサーバーを1台で構築したKubernetesクラスターをHA構成に変更しようとしたので、作業のメモ。 この記事ではetcdを1</description>
    </item>
    
    <item>
      <title>自宅での仕事環境を改善する</title>
      <link>https://f110.jp/posts/improve-working-env-at-home/</link>
      <pubDate>Sun, 26 Jul 2020 13:04:05 +0900</pubDate>
      
      <guid>https://f110.jp/posts/improve-working-env-at-home/</guid>
      <description>ここ3年くらいは会社でも家でも仕事をするようになっていたので最近のフルリモートでも基本的には困りませんでした。 ですがフルリモート生活が長くな</description>
    </item>
    
    <item>
      <title>CIツールを自作してる</title>
      <link>https://f110.jp/posts/made-ci-tool/</link>
      <pubDate>Fri, 24 Jul 2020 18:51:14 +0900</pubDate>
      
      <guid>https://f110.jp/posts/made-ci-tool/</guid>
      <description>これまでにいろいろなCIツールを試し・使い、自分でも運用してきましたが満足できるツールはありませんでした。 これまでに試したり使ったツールは Jenkins</description>
    </item>
    
    <item>
      <title>自宅用のssh loginを簡単にするツールを作った</title>
      <link>https://f110.jp/posts/ssh-tool/</link>
      <pubDate>Tue, 26 May 2020 23:35:29 +0900</pubDate>
      
      <guid>https://f110.jp/posts/ssh-tool/</guid>
      <description>新しい環境やインフラを触り始めると早い段階で簡単にsshできるツールを作っています。 大体どんなインフラでもやることは一緒で ホストをリストアッ</description>
    </item>
    
    <item>
      <title>Ubuntu 20.04へアップデート</title>
      <link>https://f110.jp/posts/update-ubuntu-20.04/</link>
      <pubDate>Mon, 04 May 2020 03:10:36 +0900</pubDate>
      
      <guid>https://f110.jp/posts/update-ubuntu-20.04/</guid>
      <description>普段使っているデスクトップPC（Ryzen Threadripper 2950X）にはSSDが物理的に2枚刺さってて1つ目にはLinuxが、2つ目にはWindowsが</description>
    </item>
    
    <item>
      <title>MetalLBからBGPで広報する</title>
      <link>https://f110.jp/posts/advertise-external-ip-by-bgp-from-metallb/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/advertise-external-ip-by-bgp-from-metallb/</guid>
      <description>自宅のKubernetesクラスタはLoadBalancerとしてMetalLBを使っていてExternalIPはARPを使って広報していま</description>
    </item>
    
    <item>
      <title>Wireguard and Unifi Controller</title>
      <link>https://f110.jp/posts/wireguard-and-unifi-controller/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/wireguard-and-unifi-controller/</guid>
      <description>UniFi Controllerは内部に持っているMongoDBに設定が保存されており、プロビジョニング（設定の反映）を行うとCLIから行ったものは消</description>
    </item>
    
    <item>
      <title>VPNをWireGuardにした</title>
      <link>https://f110.jp/posts/vpn-with-wireguard/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/vpn-with-wireguard/</guid>
      <description>追記(2020/04/21) 下記の手順ではUniFi Controllerでプロビジョニングを設定すると多くの設定が消えます。 UniFi Control</description>
    </item>
    
    <item>
      <title>Factorio Headless</title>
      <link>https://f110.jp/posts/factorio-headless/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/factorio-headless/</guid>
      <description>最近Factorioにすごいハマってて毎日プレイしてる。 やりすぎて1週間で仕事をしてる時間よりFactorioをプレイしてる時間の方が長いこ</description>
    </item>
    
    <item>
      <title>Prometheusにあるメトリクスでグラフを描く</title>
      <link>https://f110.jp/posts/visualize-metrics-from-prometheus/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/visualize-metrics-from-prometheus/</guid>
      <description>Prometheusが収集しているメトリクスから少しだけまともなグラフの画像を生成する方法です。 大まかに次のステップで画像を生成します。 グラ</description>
    </item>
    
    <item>
      <title>Homecluster basic</title>
      <link>https://f110.jp/posts/homecluster/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/homecluster/</guid>
      <description>自宅の Kubernetes クラスタをどうやって構成するかという話。 自宅クラスタ関連は タグ で一覧できるようにしています。 1&amp;nbsp;&amp;nbsp;&amp;nbsp;m</description>
    </item>
    
    <item>
      <title>Dockerを避ける</title>
      <link>https://f110.jp/posts/avoid-docker/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/avoid-docker/</guid>
      <description>皆さんはdockerを使っていますか？使っていますよね？ でもその使い方、本当にdockerじゃないとダメですか？ 自分のdockerの使い方 ほ</description>
    </item>
    
    <item>
      <title>依存ライブラリは常にvendoringする</title>
      <link>https://f110.jp/posts/vendoring-dependent-libraries/</link>
      <pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/vendoring-dependent-libraries/</guid>
      <description>BazelでGoの依存ライブラリを管理する方法は2つあります。 go.mod からWORKSPACEファイルを生成する vendorディレクトリを使う 以前は</description>
    </item>
    
    <item>
      <title>Bazelとgrpc-goを仲良くさせる</title>
      <link>https://f110.jp/posts/bazel-with-grpc-go/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/bazel-with-grpc-go/</guid>
      <description>Bazel をGoのプロジェクトで使っている際に多くの人が悩むのがProtocol Buffersの扱い。 gRPCを使っているリポジトリでBazelとg</description>
    </item>
    
    <item>
      <title>Bazelでインテグレーションテストをする</title>
      <link>https://f110.jp/posts/integration-test-with-bazel/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/integration-test-with-bazel/</guid>
      <description>GoのプロジェクトをビルドするツールとしてGNU MakeではなくBazelを利用し、インテグレーションテストを実現する方法について紹介します</description>
    </item>
    
    <item>
      <title>GoでWebサーバを作る際のTips</title>
      <link>https://f110.jp/posts/tips-to-building-web-server-with-go/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/tips-to-building-web-server-with-go/</guid>
      <description>本エントリは オリジナル の一部を再編集して掲載しています。(2020/03/31) 内部ツール向けプロキシサーバを自作 しているためいわゆるリバー</description>
    </item>
    
    <item>
      <title>GoとBazel</title>
      <link>https://f110.jp/posts/go-and-bazel/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/go-and-bazel/</guid>
      <description>本エントリは オリジナル のコピーです。 以前、 モノレポ構成にしてビルドツールとしてBazelを利用している ことを紹介しました。 そのBazelは1</description>
    </item>
    
    <item>
      <title>Bazelの使い方詰め合わせ</title>
      <link>https://f110.jp/posts/tips-on-bazel/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/tips-on-bazel/</guid>
      <description>本エントリは オリジナル の一部を再編集して掲載しています。 (2020/03/31) 前の記事 ではBazelについて簡単に紹介しました。 ここでは更に1歩、Bazelの使</description>
    </item>
    
    <item>
      <title>Bazelとモノレポ</title>
      <link>https://f110.jp/posts/monorepo-with-bazel/</link>
      <pubDate>Tue, 07 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://f110.jp/posts/monorepo-with-bazel/</guid>
      <description>本エントリは オリジナル の一部を再編集して掲載しています。（2020/03/31） 1&amp;nbsp;&amp;nbsp;&amp;nbsp;モノレポのメリット 2&amp;</description>
    </item>
    
  </channel>
</rss>